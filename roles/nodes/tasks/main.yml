- name: Include om-vars.yaml written by terraform during deployment
  include_vars:
    file: vars/global-vars.yml

- name: Fetch the Secrets from the aws Secret manager
  set_fact:
    project_keys: "{{ lookup('amazon.aws.aws_secret', project_name, region=aws_region) }}"

- name: Check if configuration file exists
  stat:
    path: /etc/mongodb-mms/automation-agent.config
  register: config_file

  become: yes
- name: Configuring the nodes
  when: not config_file.stat.exists
  block:  
    - name: Download .rpm
      get_url:
        url: "{{ om_url.0 }}/download/agent/automation/mongodb-mms-automation-agent-manager-12.0.13.7627-1.x86_64.rhel7.rpm"
        dest: /home/ec2-user/mongodb-agent.rpm
        mode: '0640'
      ignore_errors: yes

    - name: Stop mongodb-mms-automation-agent.service if exists
      ansible.builtin.systemd:
        name: mongodb-mms-automation-agent
        state: stopped
      changed_when: false
      failed_when: false
      register: output
      ignore_errors: yes

    - name: Install an .rpm package
      yum:
        name: /home/ec2-user/mongodb-agent.rpm
        state: present
      become: yes

    - name: Replace agent settings
      lineinfile:
        path: /etc/mongodb-mms/automation-agent.config
        regexp: '^{{ item.regexp }}'
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^mmsGroupId=', line: 'mmsGroupId={{ project_keys.Project_id }}' }
        - { regexp: '^mmsApiKey=', line: 'mmsApiKey={{ project_keys.agentApiKey }}' }
        - { regexp: '^mmsBaseUrl=', line: 'mmsBaseUrl={{ om_url.0 }}' }
        - { regexp: '^tlsRequireValidMMSServerCertificates=', line: 'tlsRequireValidMMSServerCertificates=true' }
        - { regexp: '^tlsMMSServerClientCertificate=', line: 'tlsMMSServerClientCertificate=/etc/pki/tls/certs/mongo.pem' }
        - { regexp: '^httpsCAFile=', line: 'httpsCAFile=/etc/pki/tls/certs/ca-bundle.crt' }
      become: yes

    - name: Create data directory
      ansible.builtin.file:
        path: /data/db
        state: directory
        owner: mongod
        group: mongod
        mode: '0755'
      become: yes

    - name: "Enable mongodb-mms-automation-agent service"
      ansible.builtin.systemd:
        name: mongodb-mms-automation-agent
        enabled: yes
      become: yes

    - name: "Start mongodb-mms-automation-agent service"
      ansible.builtin.systemd:
        name: mongodb-mms-automation-agent
        state: restarted
      become: yes
